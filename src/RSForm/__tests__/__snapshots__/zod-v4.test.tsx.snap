// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`zodResolver > should return a single error from RSZodResolver when validation fails 1`] = `
{
  "errors": {
    "": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
    },
    "accessToken": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
    },
    "birthYear": {
      "message": "Invalid input: expected number, received string",
      "ref": undefined,
      "type": "invalid_type",
    },
    "dateStr": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
    },
    "email": {
      "message": "Invalid email address",
      "ref": {
        "name": "email",
      },
      "type": "invalid_format",
    },
    "enabled": {
      "message": "Invalid input: expected boolean, received undefined",
      "ref": undefined,
      "type": "invalid_type",
    },
    "like": [
      {
        "id": {
          "message": "Invalid input: expected number, received string",
          "ref": undefined,
          "type": "invalid_type",
        },
        "name": {
          "message": "Invalid input: expected string, received undefined",
          "ref": undefined,
          "type": "invalid_type",
        },
      },
    ],
    "password": {
      "message": "One uppercase character",
      "ref": {
        "name": "password",
      },
      "type": "invalid_format",
    },
    "repeatPassword": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
    },
    "tags": {
      "message": "Invalid input: expected array, received undefined",
      "ref": undefined,
      "type": "invalid_type",
    },
    "url": {
      "message": "Custom error url",
      "ref": undefined,
      "type": "invalid_format",
    },
    "username": {
      "message": "Invalid input: expected string, received undefined",
      "ref": {
        "name": "username",
      },
      "type": "invalid_type",
    },
  },
  "values": {},
}
`;

exports[`zodResolver > should return a single error from RSZodResolver with \`mode: sync\` when validation fails 1`] = `
{
  "errors": {
    "": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
    },
    "accessToken": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
    },
    "birthYear": {
      "message": "Invalid input: expected number, received string",
      "ref": undefined,
      "type": "invalid_type",
    },
    "dateStr": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
    },
    "email": {
      "message": "Invalid email address",
      "ref": {
        "name": "email",
      },
      "type": "invalid_format",
    },
    "enabled": {
      "message": "Invalid input: expected boolean, received undefined",
      "ref": undefined,
      "type": "invalid_type",
    },
    "like": [
      {
        "id": {
          "message": "Invalid input: expected number, received string",
          "ref": undefined,
          "type": "invalid_type",
        },
        "name": {
          "message": "Invalid input: expected string, received undefined",
          "ref": undefined,
          "type": "invalid_type",
        },
      },
    ],
    "password": {
      "message": "One uppercase character",
      "ref": {
        "name": "password",
      },
      "type": "invalid_format",
    },
    "repeatPassword": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
    },
    "tags": {
      "message": "Invalid input: expected array, received undefined",
      "ref": undefined,
      "type": "invalid_type",
    },
    "url": {
      "message": "Custom error url",
      "ref": undefined,
      "type": "invalid_format",
    },
    "username": {
      "message": "Invalid input: expected string, received undefined",
      "ref": {
        "name": "username",
      },
      "type": "invalid_type",
    },
  },
  "values": {},
}
`;

exports[`zodResolver > should return all the errors from RSZodResolver when validation fails with \`validateAllFieldCriteria\` set to true 1`] = `
{
  "errors": {
    "": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
      "types": {
        "invalid_type": [
          "Invalid input: expected string, received undefined",
          "Invalid input: expected number, received undefined",
        ],
      },
    },
    "accessToken": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
      "types": {
        "invalid_union": "Invalid input",
      },
    },
    "birthYear": {
      "message": "Invalid input: expected number, received string",
      "ref": undefined,
      "type": "invalid_type",
      "types": {
        "invalid_type": "Invalid input: expected number, received string",
      },
    },
    "dateStr": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
      "types": {
        "invalid_type": "Invalid input: expected string, received undefined",
      },
    },
    "email": {
      "message": "Invalid email address",
      "ref": {
        "name": "email",
      },
      "type": "invalid_format",
      "types": {
        "invalid_format": "Invalid email address",
      },
    },
    "enabled": {
      "message": "Invalid input: expected boolean, received undefined",
      "ref": undefined,
      "type": "invalid_type",
      "types": {
        "invalid_type": "Invalid input: expected boolean, received undefined",
      },
    },
    "like": [
      {
        "id": {
          "message": "Invalid input: expected number, received string",
          "ref": undefined,
          "type": "invalid_type",
          "types": {
            "invalid_type": "Invalid input: expected number, received string",
          },
        },
        "name": {
          "message": "Invalid input: expected string, received undefined",
          "ref": undefined,
          "type": "invalid_type",
          "types": {
            "invalid_type": "Invalid input: expected string, received undefined",
          },
        },
      },
    ],
    "password": {
      "message": "One uppercase character",
      "ref": {
        "name": "password",
      },
      "type": "invalid_format",
      "types": {
        "invalid_format": [
          "One uppercase character",
          "One lowercase character",
          "One number",
        ],
        "too_small": "Must be at least 8 characters in length",
      },
    },
    "repeatPassword": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
      "types": {
        "invalid_type": "Invalid input: expected string, received undefined",
      },
    },
    "tags": {
      "message": "Invalid input: expected array, received undefined",
      "ref": undefined,
      "type": "invalid_type",
      "types": {
        "invalid_type": "Invalid input: expected array, received undefined",
      },
    },
    "url": {
      "message": "Custom error url",
      "ref": undefined,
      "type": "invalid_format",
      "types": {
        "invalid_format": "Custom error url",
      },
    },
    "username": {
      "message": "Invalid input: expected string, received undefined",
      "ref": {
        "name": "username",
      },
      "type": "invalid_type",
      "types": {
        "invalid_type": "Invalid input: expected string, received undefined",
      },
    },
  },
  "values": {},
}
`;

exports[`zodResolver > should return all the errors from RSZodResolver when validation fails with \`validateAllFieldCriteria\` set to true and \`mode: sync\` 1`] = `
{
  "errors": {
    "": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
      "types": {
        "invalid_type": [
          "Invalid input: expected string, received undefined",
          "Invalid input: expected number, received undefined",
        ],
      },
    },
    "accessToken": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
      "types": {
        "invalid_union": "Invalid input",
      },
    },
    "birthYear": {
      "message": "Invalid input: expected number, received string",
      "ref": undefined,
      "type": "invalid_type",
      "types": {
        "invalid_type": "Invalid input: expected number, received string",
      },
    },
    "dateStr": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
      "types": {
        "invalid_type": "Invalid input: expected string, received undefined",
      },
    },
    "email": {
      "message": "Invalid email address",
      "ref": {
        "name": "email",
      },
      "type": "invalid_format",
      "types": {
        "invalid_format": "Invalid email address",
      },
    },
    "enabled": {
      "message": "Invalid input: expected boolean, received undefined",
      "ref": undefined,
      "type": "invalid_type",
      "types": {
        "invalid_type": "Invalid input: expected boolean, received undefined",
      },
    },
    "like": [
      {
        "id": {
          "message": "Invalid input: expected number, received string",
          "ref": undefined,
          "type": "invalid_type",
          "types": {
            "invalid_type": "Invalid input: expected number, received string",
          },
        },
        "name": {
          "message": "Invalid input: expected string, received undefined",
          "ref": undefined,
          "type": "invalid_type",
          "types": {
            "invalid_type": "Invalid input: expected string, received undefined",
          },
        },
      },
    ],
    "password": {
      "message": "One uppercase character",
      "ref": {
        "name": "password",
      },
      "type": "invalid_format",
      "types": {
        "invalid_format": [
          "One uppercase character",
          "One lowercase character",
          "One number",
        ],
        "too_small": "Must be at least 8 characters in length",
      },
    },
    "repeatPassword": {
      "message": "Invalid input: expected string, received undefined",
      "ref": undefined,
      "type": "invalid_type",
      "types": {
        "invalid_type": "Invalid input: expected string, received undefined",
      },
    },
    "tags": {
      "message": "Invalid input: expected array, received undefined",
      "ref": undefined,
      "type": "invalid_type",
      "types": {
        "invalid_type": "Invalid input: expected array, received undefined",
      },
    },
    "url": {
      "message": "Custom error url",
      "ref": undefined,
      "type": "invalid_format",
      "types": {
        "invalid_format": "Custom error url",
      },
    },
    "username": {
      "message": "Invalid input: expected string, received undefined",
      "ref": {
        "name": "username",
      },
      "type": "invalid_type",
      "types": {
        "invalid_type": "Invalid input: expected string, received undefined",
      },
    },
  },
  "values": {},
}
`;

exports[`zodResolver > should return parsed values from RSZodResolver with \`mode: sync\` when validation pass 1`] = `
{
  "errors": {},
  "values": {
    "accessToken": "accessToken",
    "birthYear": 2000,
    "dateStr": 2020-01-01T00:00:00.000Z,
    "email": "john@doe.com",
    "enabled": true,
    "like": [
      {
        "id": 1,
        "name": "name",
      },
    ],
    "password": "Password123_",
    "repeatPassword": "Password123_",
    "tags": [
      "tag1",
      "tag2",
    ],
    "url": "https://react-hook-form.com/",
    "username": "Doe",
  },
}
`;
